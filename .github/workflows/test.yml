name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_NAME: testdb
      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: localhost
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      PYTHONPATH: ${{ github.workspace }}
      DJANGO_SETTINGS_MODULE: hub.settings
      RUNNING_TESTS: "1"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov coverage black flake8 isort pylint mypy

      - name: Run linters
        run: |
          echo "==================== ISORT ===================="
          isort --check-only .
          echo "==================== BLACK ===================="
          black --check .
          echo "==================== FLAKE8 ===================="
          flake8 .
          echo "==================== PYLINT ===================="
          pylint --rcfile=.pylintrc hub/ recetario/ tests/ users/
          pylint_exit=$?
          echo "==================== MYPY ===================="
          mypy --config-file pyproject.toml --install-types --non-interactive .

      - name: Run tests
        run: |
          pytest --cov=hub --cov=recetario --cov=tests --cov=users --cov-report=term-missing --cov-fail-under=80
          coverage xml