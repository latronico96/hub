name: Django CI & Docker

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_DB: testdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PYTHONPATH: ${{ github.workspace }}
      DJANGO_SETTINGS_MODULE: hub.settings
      RUNNING_TESTS: "1"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Wait for PostgreSQL and Redis
        run: |
          echo "Esperando a PostgreSQL y Redis..."
          for i in {1..30}; do
            nc -z postgres 5432 && nc -z redis 6379 && echo "Postgres y Redis listos" && break
            echo "Esperando servicios..."
            sleep 2
          done

      - name: Debug - Check DNS and connectivity
        run: |
          echo "DNS y conexi√≥n:"
          getent hosts postgres || true
          getent hosts redis || true
          ping -c 2 postgres || true
          ping -c 2 redis || true
          nc -vz postgres 5432 || true
          nc -vz redis 6379 || true

      - name: Run migrations
        run: |
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      - name: Run linters
        run: |
          black --check .
          flake8 .
          isort --check-only .
          pylint hub/ recetario/ tests/ users/
          mypy --install-types --non-interactive .

      - name: Run tests
        run: |
          pytest --cov=hub --cov=recetario --cov=tests --cov=users --cov-report=term-missing --cov-fail-under=80
          coverage xml

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/hub-backend:latest

      - name: Inspect Docker image size
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/hub-backend:latest
          docker image inspect ${{ secrets.DOCKER_USERNAME }}/hub-backend:latest --format='{{.Size}} bytes'
